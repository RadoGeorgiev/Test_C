#include <iostream>
#include <string>
using namespace std;

class Rectangle
{
    int *a, *b;
    
    public:
        Rectangle(); // default CONSTRUCTOR
        Rectangle(int); // only one item provided overloading
        Rectangle(int, int); //declaring CONSTRUCTOR
        ~Rectangle(); //declaring DECONSTRUCTOR
        int area(){return *a * *b;}
};

Rectangle::Rectangle(){ // Building the CONSTRUCTOR - Default/overload case 1
    a = new int;
    b = new int;
    *a = 2;
    *b = 2;
    cout << "Default/overload Constructor applied" << endl;
}

Rectangle::Rectangle(int side_1){ // Building the CONSTRUCTOR - overload case 2
    a = new int;
    b = new int;
    *a = side_1;
    *b = side_1;
    cout << "overload Constructor applied" << endl;
}

Rectangle::Rectangle(int side_1, int side_2){ // Building the CONSTRUCTOR - normal case
    a = new int;
    b = new int;
    *a = side_1;
    *b = side_2;
    cout << "Normal Constructor applied" << endl;
}

Rectangle::~Rectangle(){
    delete a;
    delete b;
    cout << "DECONSTRUCTOR applied" << endl;
}

void Text(){
    cout << "Enter side size:";
}

int main()
{
    Rectangle fig1(15,20);
    //Text();
    //cin >> s1;
    Rectangle fig2;
    //Text();
    //cin >> s1;
    //Text();
    //cin >> s2;
    Rectangle fig3(15);
    cout << "Area 1 is :" << fig1.area() << endl;
    cout << "Address 1 is:" << &fig1 << endl;
    cout << "Area 2 is :" << fig2.area() << endl;
    cout << "Address 2 is:" << &fig2 << endl;
    cout << "Area 3 is :" << fig3.area() << endl;
    cout << "Address 3 is:" << &fig3 << endl;
    return 0;
}
